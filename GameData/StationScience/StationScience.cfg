STN_SCI_SETTINGS
{
  // Max number of Active and Offered contracts to offer from Station Science
  maxContracts = 4

  // How fast more valuable Station Science contracts should
  // appear as you complete them
  progressionFactor = 0.5

  // How much Reputation impacts getting more valuable
  // Station Science contracts.
  reputationFactor = 0.01

  // How relatively valuable one-star contracts tend to be
  trivialMultiplier = 0.25

  // How relatively valuable two-star contracts tend to be
  significantMultiplier = 1

  // How relatively valuable three-star contracts tend to be
  exceptionalMultiplier = 1.5

  // Each contract has a "value" which is the experiment's challenge,
  // times the planet's challenge. Higher values give better rewards.

  // To disable contracts for a given experiment or planet, remove that
  // entry from these lists
  experimentChallenge
  {
    StnSciExperiment1 = 1
    StnSciExperiment2 = 2
    StnSciExperiment3 = 2.5
    StnSciExperiment4 = 3
    StnSciExperiment5 = 2.5
    StnSciExperiment6 = 3.5
  }

  planetChallenge
  {
    Kerbin = 1
    Mun = 3
    Minmus = 3.25
    Duna = 6
    Ike = 6.5
    Eve = 6
    Gilly = 6.5
    Dres = 8
    Jool = 10
    Laythe = 11
    Vall = 11.5
    Tylo = 12
    Pol = 11
    Bop = 11
    Eeloo = 13
  }

  // For a given experiment, don't offer it until the corresponding
  // listed parts have been unlocked
  experimentPrereqs
  {
    StnSciExperiment1 = StnSciExperiment1,StnSciLab
    StnSciExperiment2 = StnSciExperiment2,StnSciCyclo
    StnSciExperiment3 = StnSciExperiment3,StnSciLab,StnSciCyclo
    StnSciExperiment4 = StnSciExperiment4,StnSciLab,StnSciCyclo
    StnSciExperiment5 = StnSciExperiment5,StnSciLab,StnSciZoo
    StnSciExperiment6 = StnSciExperiment6,StnSciLab,StnSciZoo,StnSciCyclo
  }

  // For each of the following, the quantity set for the contract is
  // the y_intercept plus the slope times the value of the contract

  // first_time_multiplier applies to the first contract completed for a
  // given experiment/planet pair
  contractScience
  {
    y_intercept = 10
    slope = 1
    first_time_multiplier = 2
  }

  // For advance/failure amounts, calculate the base reward amount, then
  // apply the advance_multiplier or failure_multiplier, respectively.
  contractFunds
  {
    y_intercept = 10000
    slope = 2000
    advance_multiplier = 0.333333
    failure_multiplier = 0.5
    first_time_multiplier = 30
  }
  contractReputation
  {
    y_intercept = 10
    slope = 1
    failure_multiplier = 1.5
    first_time_multiplier = 2
  }
  contractDeadline
  {
    y_intercept = 2
    slope = 0.1
    first_time_multiplier = 2
  }
}
