//------\\
//---SETI-BalanceMod---\\
//------\\
//---Part Modding for Universal Storage---\\
//------\\


//------\\
//---Structural---\\
//------\\

//---Universal Storage Core: Quadcore
@PART[US_1C10_Wedge_Quadcore]:NEEDS[UniversalStorage]:AFTER[UniversalStorage]:FOR[SETIrebalance]
{
	@mass = 0.04
}

//---Universal Storage Core: Hexacore
@PART[US_1C15_Wedge_Hexacore]:NEEDS[UniversalStorage]:AFTER[UniversalStorage]:FOR[SETIrebalance]
{
	@mass = 0.08
}

//---Universal Storage Core: Octocore
@PART[US_1C20_Wedge_Octocore]:NEEDS[UniversalStorage]:AFTER[UniversalStorage]:FOR[SETIrebalance]
{
	@mass = 0.12
}

//---Universal Storage: Science Bay
@PART[US_1M110_Wedge_ScienceBay]:NEEDS[UniversalStorage]:AFTER[UniversalStorage]:FOR[SETIrebalance]
{
	@mass = 0.12
}

//---Universal Storage Decoupler: Small
@PART[US_f_Dec_SafetyDecoupler125]:NEEDS[UniversalStorage]:AFTER[UniversalStorage]:FOR[SETIrebalance]
{
	@mass = 0.1
}

//---Universal Storage Decoupler: Large
@PART[US_e_Dec_SafetyDecoupler250]:NEEDS[UniversalStorage]:AFTER[UniversalStorage]:FOR[SETIrebalance]
{
	@mass = 0.36
}



//------\\
//---Container---\\
//------\\


//---Universal Storage Module: EVA-X
@PART[US_3R310_EVA_EVAX]:NEEDS[UniversalStorage]:AFTER[UniversalStorage]:FOR[SETIrebalance]
{
	@mass = 0.0385
}



//------\\
//---Converters---\\
//------\\


//---Universal Storage Processor: Alkaline Fuel Cell
@PART[US_1P110_Wedge_Fuelcell]:NEEDS[UniversalStorage]:AFTER[UniversalStorage]:FOR[SETIrebalance]
{
	@entryCost = 4200
	@cost = 600
	@mass = 0.1093
	
	@description = This fuel cell consumes hydrogen and oxygen to produce water, heat, and electrical output. Depending on energy demand, it can produce up to 12EC/s. At full load, it uses about 5225 hydrogen and 2665 oxygen per hour, exhausting the built in supplies within 12 hours. Naturally, alkaline fuel cells do not count as energy sources for satellite contracts.
	
	!MODULE[ModuleResourceConverter] {}
	
	MODULE
	{
		name = ModuleResourceConverter
		ConverterName = Fuel Cell 8kW
		StartActionName = Start Fuel Cell 8kW
		StopActionName = Stop Fuel Cell 8kW
		FillAmount = 0.95 
		AutoShutdown = true
		GeneratesHeat = true
		TemperatureModifier = 10
		UseSpecializationBonus = false
		DefaultShutoffTemp = 0.5		 
		INPUT_RESOURCE
		{
			ResourceName = Hydrogen
			Ratio = 0.967510196395995
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = Oxygen
			Ratio = 0.493498817906383
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 8
			DumpExcess = false
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Water
			Ratio = 0.000782812499904
			DumpExcess = true
		}
	}
	
	MODULE
	{
		name = ModuleResourceConverter
		ConverterName = Fuel Cell 4kW
		StartActionName = Start Fuel Cell 4kW
		StopActionName = Stop Fuel Cell 4kW
		FillAmount = 0.95 
		AutoShutdown = true
		GeneratesHeat = true
		TemperatureModifier = 10
		UseSpecializationBonus = false
		DefaultShutoffTemp = 0.5		 
		INPUT_RESOURCE
		{
			ResourceName = Hydrogen
			Ratio = 0.483755098197998
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = Oxygen
			Ratio = 0.246749408953191
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 4
			DumpExcess = false
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Water
			Ratio = 0.000391406249952
			DumpExcess = true
		}
	}
	
	//	Includes about 12 hours of resources @ full load
	!RESOURCE,* { }
	RESOURCE
	{
		name = Hydrogen
		// Units: Liters
		// Stored as a cryogenic liquid (expansion ratio 851)
		amount = 62695
		maxAmount = 62695
	}
		
	RESOURCE
	{
		name = Oxygen
		// Units: Liters
		// Stored as a cryogenic liquid (expansion ratio 860)
		amount = 31978
		maxAmount = 31978
	}
}

//---Universal Storage Processor: Elektron
@PART[US_1P120_Wedge_Elektron]:NEEDS[UniversalStorage]:AFTER[UniversalStorage]:FOR[SETIrebalance]
{
	@cost = 750
	
	@title = Universal Storage Processor: Water Splitter (Elektron)
	@description = The Elektron Water Splitter uses electrolysis to convert 10L of water into about 6304 oxygen and 12360 hydrogen. It can support up to 1 kerbal, using about 9.8 mL water and 144 EC per hour to produce about 6.17 oxygen and 12.09 hydrogen.
	
	@mass = 0.16
	
	!MODULE[ModuleResourceConverter] {}
	
	MODULE
	{
		name = ModuleResourceConverter
		ConverterName = Water Electrolizer
		StartActionName = Start Fuel Cell 8kW
		StopActionName = Stop Fuel Cell 8kW
		FillAmount = 0.95 
		AutoShutdown = true
		GeneratesHeat = true
		TemperatureModifier = 20
		UseSpecializationBonus = false
		DefaultShutoffTemp = 0.5		 
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.04018088182325655
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = Water
			Ratio = 0.000002745279948
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Hydrogen
			Ratio = 0.00339300450861065
			DumpExcess = true
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Oxygen
			Ratio = 0.00173067293800885
			DumpExcess = False
		}
	}
	
	%RESOURCE[Water]
	{
		amount = 0
		maxAmount = 1
	}
}

//---Universal Storage Processor: Sabatier Reactor
@PART[US_1P130_Wedge_Sabatier]:NEEDS[UniversalStorage,TacLifeSupport]:AFTER[UniversalStorage]:FOR[SETIrebalance]
{
	@cost = 950
	
	@description = The Sabatier Reactor turns about 6265 carbon dioxide and 24720 hydrogen into 10L of water and a negligible amount of methane (liquid fuel). It can transform the carbon dioxide of 1 Kerbal, if enough hydrogen is available. With 1 carbon dioxide producing kerbal, it uses about 21.03 hydrogen and 144 EC per hour, while producing about 8.5 mL of water.
	
	@mass = 0.16
	
	!MODULE[ModuleResourceConverter] {}
	MODULE
	{
		name = TacGenericConverter
		converterName = Sabatier Reactor

		// A scaling factor by which the resource amounts are multiplied
		conversionRate = 1.01

		// A comma separated list of resources to use as inputs.
		// For each resource, list the resource name and the amount (which
		// is multiplied by the conversionRate)
		inputResources =  CarbonDioxide, 0.00148012889876, Hydrogen, 0.005840290184004, ElectricCharge, 0.039783051310155

		// A comma separated list of resources to output. Same as above
		// but also specify whether it should keep converting if the
		// resource is full (generating excess that will be thrown away).
		// Liquid fuel output should be Methane with mass of 1.0500841750839127272727272727273e-9
		outputResources = Water, 0.000002362689394, false, LiquidFuel, 0.000000210016835, true
	}
	
	%RESOURCE[CarbonDioxide]
	{
		amount = 0
		maxAmount = 76
	}
	
	%RESOURCE[Hydrogen]
	{
		amount = 0
		maxAmount = 300
	}
}

//---Universal Storage Processor: Water Purifier
@PART[US_1P140_Wedge_WRS]:NEEDS[UniversalStorage,TacLifeSupport]:AFTER[UniversalStorage]:FOR[SETIrebalance]
{
	@entryCost = 7500
	@cost = 650
	
	@description = A life support recycling module that filters and purifies water, leaving pure drinkable water. Rated for up to 1 Kerbal, stretches drinking water reserves by a factor of about 10.

	@mass = 0.16
	
	!MODULE[ModuleResourceConverter] {}
	
	MODULE
	{
		name = TacGenericConverter
		converterName = Water Purifier

		// A scaling factor by which the resource amounts are multiplied
		conversionRate = 1.02

		// A comma separated list of resources to use as inputs.
		// For each resource, list the resource name and the amount (which
		// is multiplied by the conversionRate)
		inputResources = WasteWater, 0.000014247685185, ElectricCharge, 0.007123842592593

		// A comma separated list of resources to output. Same as above
		// but also specify whether it should keep converting if the
		// resource is full (generating excess that will be thrown away).
		outputResources = Water, 0.000012822916667, false, Waste, 0.000001994675926, true
	}
	
	RESOURCE
	{
		name = WasteWater
		amount = 0
		maxAmount = 1
	}
}


//------\\
//---Tanks---\\
//------\\


//---Universal Storage Resource: LF10 Fuel Tank
@PART[US_1R210_Wedge_Liquidfuel]:NEEDS[UniversalStorage]:AFTER[UniversalStorage]:FOR[SETIrebalance]
{
	@entryCost = 1500
	@cost = 18
	@mass = 0.01
	
	!RESOURCE,* { }
	
	RESOURCE
	{
		name = LiquidFuel
		// Units: 1 unit = 6.25 liters  (Assumed based on density of LiquidFuel compared to RP-1)
		amount = 6.3
		maxAmount = 6.3
	}

	RESOURCE
	{
		name = Oxidizer
		// Units: 1 unit = 4.382 liters  (Assumed based on density of Oxydizer compared to LOX)
		amount = 7.7
		maxAmount = 7.7
	}
}

//---Universal Storage Resource: M30 Monopropellant Tank
@PART[US_1R220_Wedge_Monoprop]:NEEDS[UniversalStorage]:AFTER[UniversalStorage]:FOR[SETIrebalance]
{
	@cost = 35
	@mass = 0.01
	
	@RESOURCE[MonoPropellant]
	{
		@amount = 17.5
		@maxAmount = 17.5
	}
}


//---Universal Storage Resource: Food Bag
@PART[US_1R320_Wedge_Food]:NEEDS[UniversalStorage]:AFTER[UniversalStorage]:FOR[SETIrebalance]
{
	@cost = 40
	@mass = 0.05943
	
	@RESOURCE[Food]
	{
		@amount = 73.19
		@maxAmount = 73.19
	}
}

//---Universal Storage Resource: Waste Tank
@PART[US_1R350_Wedge_Waste]:NEEDS[UniversalStorage]:AFTER[UniversalStorage]:FOR[SETIrebalance]
{
	@cost = 20
	@mass = 0.04004
	
	@RESOURCE[Waste]
	{
		@amount = 0
		@maxAmount = 53.28
	}
}

//---Universal Storage Resource: Water Tank
@PART[US_1R360_Wedge_Water]:NEEDS[UniversalStorage]:AFTER[UniversalStorage]:FOR[SETIrebalance]
{
	@cost = 20
	@mass = 0.03162
	
	@RESOURCE[Water]
	{
		@amount = 48.38
		@maxAmount = 48.38
	}
}

//---Universal Storage Resource: Greywater Tank
@PART[US_1R370_Wedge_WasteWater]:NEEDS[UniversalStorage]:AFTER[UniversalStorage]:FOR[SETIrebalance]
{
	@cost = 20
	@mass = 0.01807
	
	@RESOURCE[WasteWater]
	{
		@amount = 0
		@maxAmount = 61.62
	}
}

//---Universal Storage Resource: Oxygen
@PART[US_1R340_Wedge_Oxygen]:NEEDS[UniversalStorage]:AFTER[UniversalStorage]:FOR[SETIrebalance]
{
	@cost = 20
	@mass = 0.01910
	
	@RESOURCE[Oxygen]
	{
		@amount = 14828
		@maxAmount = 14828
	}
}

//---Universal Storage Resource: Carbon Dioxide
@PART[US_1R310_Wedge_CarbonDioxide]:NEEDS[UniversalStorage]:AFTER[UniversalStorage]:FOR[SETIrebalance]
{
	@cost = 10
	@mass = 0.0150
	
	@RESOURCE[CarbonDioxide]
	{
		@amount = 0
		@maxAmount = 12812
	}
}

//---Universal Storage Resource: Hydrogen
@PART[US_1R330_Wedge_Hydrogen]:NEEDS[UniversalStorage]:AFTER[UniversalStorage]:FOR[SETIrebalance]
{
	@cost = 20
	@mass = 0.002387
	
	@RESOURCE[Hydrogen]
	{
		@amount = 29070
		@maxAmount = 29070
	}
}


//---Universal Storage: Radial Food Tank
@PART[US_Radial_R40_Food]:NEEDS[UniversalStorage]:AFTER[UniversalStorage]:FOR[SETIrebalance]
{
	@cost = 10
	@mass = 0.01486
	
	@RESOURCE[Food]
	{
		@amount = 18.3
		@maxAmount = 18.3
	}
}

//---Universal Storage: Radial Oxygen Tank
@PART[US_2R340_Radial_Oxygen]:NEEDS[UniversalStorage]:AFTER[UniversalStorage]:FOR[SETIrebalance]
{
	@cost = 5
	@mass = 0.004777
	
	@RESOURCE[Oxygen]
	{
		@amount = 3704
		@maxAmount = 3704
	}
}

//---Universal Storage: Radial Water Tank
@PART[US_Radial_R30_Water]:NEEDS[UniversalStorage]:AFTER[UniversalStorage]:FOR[SETIrebalance]
{
	@cost = 5
	@mass = 0.0079
	
	@RESOURCE[Water]
	{
		@amount = 12.1
		@maxAmount = 12.1
	}
}