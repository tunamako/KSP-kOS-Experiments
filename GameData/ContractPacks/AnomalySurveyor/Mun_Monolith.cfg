// Contract for visiting the Mun monoliths.
//   Author: nightingale

CONTRACT_TYPE
{
    name = AS_Mun_Monolith
    group = AnomalySurveyor

    sortKey = 01.03.@anomalyIndex
    genericTitle = Undiscovered anomaly on @targetBody
    genericDescription = Are anomalies on @targetBody anything like the ones on Kerbin?

    title = Investigate @anomalyName on @targetBody
    description = We've managed to track the signals eminating from the Kerbin monoliths, and they appear to be heading to several locations on the Mun and one on Minmus.  Let's head out there and see where these monoliths take us.
    synopsis = Investigate @anomalyName.
    completedMessage = The monolith is sending a signal somewhere away from Kerbin...

    // Level 2 prestige
    prestige = Significant

    targetBody = @anomalyIndex == 3 ? Minmus : Mun

    // Always offered by the Anomaly Surveyor Group
    agent = Anomaly Surveyor Group

    // Can do the contract once per anomaly
    maxCompletions = 1

    // Contract rewards
    rewardFunds = @rewards.ElementAt(@anomalyIndex)
    rewardScience = 10.0
    rewardReputation = 10.0

    DATA
    {
        type = List<string>
        anomalyNames = [ "TMA-5", "TMA-6", "TMA-7", "TMA-8" ]
    }

    DATA
    {
        type = List<double>

        latitudes = [ -9.83137229999611, 57.660236164984, -82.206266198768, 23.7759194904872 ]
        longitudes = [ -334.082286806068, -350.85775273975, 102.928400491749, 60.0463591764103 ]
        altitudes = [ 9.27708882157458, 0.20538711422705, -181.768236982782, 0.332117420577561 ]
        rewards = [ 50000, 75000, 125000, 25000 ]
    }

    DATA_EXPAND
    {
        type = int

        anomalyIndex = [0, 1, 2, 3]
    }

    DATA
    {
        type = string
        anomalyName = @anomalyNames.ElementAt(@anomalyIndex)
    }

    DATA
    {
        type = double
        latitude = @latitudes.ElementAt(@anomalyIndex)
        longitude = @longitudes.ElementAt(@anomalyIndex)
        altitude = @altitudes.ElementAt(@anomalyIndex)
    }

    PARAMETER
    {
        name = WP0
        type = All
        title = Vist TMA-5

        PARAMETER
        {
            name = VesselIsType
            type = VesselIsType

            vesselType = EVA
        }

        PARAMETER
        {
            name = VisitWaypoint
            type = VisitWaypoint

            index = 0
            distance = 25
        }

        REQUIREMENT
        {
            type = Expression
            
            expression = @/anomalyIndex == 0
        }
    }

    PARAMETER
    {
        name = WP1
        type = All
        title = Visit TMA-6

        PARAMETER
        {
            name = VesselIsType
            type = VesselIsType

            vesselType = EVA
        }

        PARAMETER
        {
            name = VisitWaypoint
            type = VisitWaypoint

            index = 0
            distance = 25
        }

        REQUIREMENT
        {
            type = Expression
            
            expression = @/anomalyIndex == 1
        }
    }

    PARAMETER
    {
        name = WP2
        type = All
        title = Visit TMA-7

        PARAMETER
        {
            name = VesselIsType
            type = VesselIsType

            vesselType = EVA
        }

        PARAMETER
        {
            name = VisitWaypoint
            type = VisitWaypoint

            index = 0
            distance = 25
        }

        REQUIREMENT
        {
            type = Expression
            
            expression = @/anomalyIndex == 2
        }
    }

    PARAMETER
    {
        name = WP3
        type = All
        title = Visit TMA-8

        PARAMETER
        {
            name = VesselIsType
            type = VesselIsType

            vesselType = EVA
        }

        PARAMETER
        {
            name = VisitWaypoint
            type = VisitWaypoint

            index = 0
            distance = 25
        }

        REQUIREMENT
        {
            type = Expression
            
            expression = @/anomalyIndex == 3
        }
    }

    BEHAVIOUR
    {
        name = WaypointGenerator
        type = WaypointGenerator

        WAYPOINT
        {
            // The name of the waypoint - displayed on the marker
            name = @/anomalyName
            icon = ContractPacks/AnomalySurveyor/Icons/monolith

            // The location
            latitude = @/latitude
            longitude = @/longitude
            altitude = @/altitude
        }
    }

    BEHAVIOUR
    {
        type = DialogBox

        DIALOG_BOX
        {
            title = TMA-5
            condition = PARAMETER_COMPLETED
            parameter = WP0

            INSTRUCTOR
            {
                name = Strategy_Mortimer
                animation = false_disappointed
            }
            TEXT
            {
                text = Well, this seems rather mundane.  I'm not sure it was worth all the Funds it took to get you out here.
            }
        }

        DIALOG_BOX
        {
            title = TMA-6
            condition = PARAMETER_COMPLETED
            parameter = WP1

            KERBAL
            {
            }
            TEXT
            {
                text = I found one, I found one!!
            }
        }

        DIALOG_BOX
        {
            title = TMA-7
            condition = PARAMETER_COMPLETED
            parameter = WP2

            INSTRUCTOR
            {
                name = Instructor_Gene
                animation = true_thumbUp
            }
            TEXT
            {
                text = Wow...  this is a VERY deep hole.  You can climb back out, right?
            }
        }

        DIALOG_BOX
        {
            title = TMA-8
            condition = PARAMETER_COMPLETED
            parameter = WP3

            KERBAL
            {
            }
            TEXT
            {
                text = Pretty tough to miss these things on Minmus.  Unless there's mint chip flavoured monoliths around here somewhere?
            }
        }
    }

    REQUIREMENT
    {
        name = Orbit
        type = Orbit
    }

    REQUIREMENT
    {
        type = AtLeast

        count = 2

        REQUIREMENT
        {
            type = CompleteContract
            contractType = AS_Kerbin_Monolith_Additional.0

            title = Must have visited a similar anomaly on Kerbin
        }

        REQUIREMENT
        {
            type = CompleteContract
            contractType = AS_Kerbin_Monolith_Additional.1

            title = Must have visited a similar anomaly on Kerbin
        }

        REQUIREMENT
        {
            type = CompleteContract
            contractType = AS_Kerbin_Monolith_Additional.2

            title = Must have visited a similar anomaly on Kerbin
        }

        REQUIREMENT
        {
            type = CompleteContract
            contractType = AS_Kerbin_Monolith_Additional.3

            title = Must have visited a similar anomaly on Kerbin
        }
    }
}
