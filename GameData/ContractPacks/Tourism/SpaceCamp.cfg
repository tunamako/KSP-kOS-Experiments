// Contract for setting up a Space Camp.
//   Author: nightingale

CONTRACT_TYPE
{
    name = Tourism_SpaceCamp
    group = Tourism

    sortKey = 06.Camp

    title = Hold a space camp
    description = Mortimer is constantly complaining about the cost of hiring new astronauts.  Rather than wasting our funds on training recruits, or picking up whichever Kerbals happen to be need of rescue from low Kerbin orbit, we should set up a space camp, and train paid tourists to join the space program!  Bring the tourists and some instructors to a long term training facility in orbit, and when they come home we'll see which ones are good candidates for joining the space program.
    synopsis = Bring @touristCount tourists into a long term orbital training facility.  Some will join our space program when they return.
    completedMessage = This was a great success, we've got a new pilot (@/candidates.ElementAt(0)), engineer (@/candidates.ElementAt(1)) and scientist (@/candidates.ElementAt(2)) ready for future missions!

    // Level 2 prestige
    prestige = Significant

    targetBody = HomeWorld()

    agent = Kerbal Space Tourism

    // Can only have one at a time
    maxSimultaneous = 1

    // Contract rewards
    rewardFunds = 75000.0 + Random(0.0, 25000.0)
    rewardReputation = 20.0
    failureReputation = 50.0

    DATA
    {
        type = int

        touristCount = Random(12, 16)
    }

    DATA
    {
        type = List<Kerbal>

        hidden = true

        tourists = NewKerbals(@touristCount - 3)
        candidates = NewKerbals(3)

        // Use the Random function to shuffle the list around
        allPassengers = @tourists.Concat(@candidates).Random(@touristCount)
    }

    PARAMETER
    {
        name = VesselParameterGroup
        type = VesselParameterGroup

        title = Bring the candidates into orbit

        duration = 40d

        PARAMETER
        {
            name = HasCrew
            type = HasCrew

            trait = Pilot

            title = Crew: A Pilot
            hideChildren = true
        }

        PARAMETER
        {
            name = HasCrew
            type = HasCrew

            trait = Engineer

            title = Crew: An Engineer
            hideChildren = true
        }

        PARAMETER
        {
            name = HasCrew
            type = HasCrew

            trait = Scientist

            title = Crew: A Scientist
            hideChildren = true
        }

        PARAMETER
        {
            name = HasCrew
            type = HasCrew

            minExperience = 2

            title = Crew: Experience Level 2 (at least one)
            hideChildren = true
        }

        PARAMETER
        {
            name = HasPassengers
            type = HasPassengers

            kerbal = @/allPassengers
        }

        PARAMETER
        {
            name = Orbit
            type = Orbit

            minPeA = @/targetBody.AtmosphereAltitude() + 5000
        }
    }

    PARAMETER
    {
        name = RecoverKerbal
        type = RecoverKerbal

        completeInSequence = true
        kerbal = @/allPassengers
    }

    BEHAVIOUR
    {
        name = SpawnPassengers
        type = SpawnPassengers

        kerbal = @/tourists
    }

    BEHAVIOUR
    {
        name = SpawnPassengers
        type = SpawnPassengers

        kerbal = @/candidates
        removePassengers = false
    }

    BEHAVIOUR
    {
        name = Expression
        type = Expression

        CONTRACT_COMPLETED_SUCCESS
        {
            TouristCount = TouristCount + @Tourism:touristCount
        }
    }

    BEHAVIOUR
    {
        type = ChangeKerbalType

        onState = CONTRACT_COMPLETED

        KERBAL_INFO
        {
            kerbal = @/candidates.ElementAt(0)
            trait = Pilot
            kerbalType = Crew
        }

        KERBAL_INFO
        {
            kerbal = @/candidates.ElementAt(1)
            trait = Engineer
            kerbalType = Crew
        }

        KERBAL_INFO
        {
            kerbal = @/candidates.ElementAt(2)
            trait = Scientist
            kerbalType = Crew
        }
    }

    BEHAVIOUR
    {
        type = AwardExperience

        experience = 3

        kerbal = @/candidates
    }

    REQUIREMENT
    {
        name = AnyStarter
        type = Any

        hideChildren = true
        title = Must have opened up space tourism

        REQUIREMENT
        {
            name = CompleteContract
            type = CompleteContract

            contractType = TourismContract
        }

        REQUIREMENT
        {
            name = CompleteContract
            type = CompleteContract

            contractType = Tourism_FirstTourist
        }
    }

    REQUIREMENT
    {
        type = HasAstronaut

        minExperience = 2
    }
}
