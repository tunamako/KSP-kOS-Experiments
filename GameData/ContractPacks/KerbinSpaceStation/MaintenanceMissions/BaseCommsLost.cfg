CONTRACT_TYPE
{
    name = BaseCommsLost
    title = Communication problems on board @/targetVessel1
	genericTitle = Base Communication Issues.
    group = BasesandStations
	description = We've lost contact with @/targetVessel1 - send an engineer to find out what's going on!
	genericDescription = We've lost contact with a base, send an engineer to check it out.
    synopsis = Send an engineer to @/targetVessel1 to check what's happening.
    completedMessage = We have recovered communication with @/targetVessel1 Thanks a lot!
    minExpiry = 1
    maxExpiry = 7
	maxSimultaneous = 1
    cancellable = false
    declinable = true
    rewardScience = 0.0
    rewardReputation = Random(1, 2)
    rewardFunds = Random(40000, 60000.0)
    failureReputation = Random(1, 2)
    failureFunds = Random(1000, 10000.0)
    advanceFunds = Random(1000, 10000.0)
	targetBody = @/targetBody1
    DATA
    {
        type = Vessel
		requiredValue = true
		uniquenessCheck = GROUP_ACTIVE
		targetVessel1 = AllVessels().Where(v => v.VesselType()== Base && v.IsLanded() && v.CrewCount() >0).SelectUnique()
		title = Must have a base with some crew.
    }
	DATA
	{
        type = Location
		vesselLocation = @/targetVessel1.Location()
		hidden = true
    }

	DATA
	{
        type = CelestialBody
		requiredValue = true
		targetBody1 = @/targetVessel1.CelestialBody()
		hidden = true
    } 

	BEHAVIOUR
    {
        name = WaypointGenerator
		type = WaypointGenerator
		WAYPOINT
        {    name = Landing Spot
		     targetBody = @/targetBody1
			 icon = balloon
			 altitude = 0.0
			 latitude = @/vesselLocation.Latitude()
			 longitude = @/vesselLocation.Longitude()
        }
    }
	
	BEHAVIOUR
{
    name = ChangeVesselOwnership
    type = ChangeVesselOwnership
	onState = CONTRACT_ACCEPTED
	vessel = @/targetVessel1
	owned = false
}

	BEHAVIOUR
{
    name = ChangeVesselOwnership
    type = ChangeVesselOwnership
	onState = CONTRACT_SUCCESS
	vessel = @/targetVessel1
	owned = true
}

PARAMETER
{
name = Engineer
type = All

PARAMETER
{
    name = VesselIsType
    type = VesselIsType
    vesselType = EVA
}
PARAMETER
{
    name = HasCrew
    type = HasCrew
    trait = Engineer 
}
		
	PARAMETER
    {
    name = VisitWaypoint
	type = VisitWaypoint
	index = 0	
	distance = 100.0
	title = Within 100m of the @/targetBody1 base 
	}
}

PARAMETER
{
    name = Duration
    type = Duration
    duration = 2m
	preWaitText = Waiting for an Engineer.
	waitingText = Repair in progress
    completionText = All repaired!
	completeInSequence = true
}
REQUIREMENT
{
    name = CompleteContract
    type = CompleteContract
	contractType = BaseCommsLost
	minCount = 0
	cooldownDuration = 10d
}

	REQUIREMENT
{
    name = CompleteContract
    type = Expression
	expression = (!@/targetBody1.IsHomeWorld())
	title = Bases should not be built on the homeworld.
}

REQUIREMENT
{
	name = RandomRoll
	type = Expression
	expression = @BasesandStations:randomRoll <3
	title = The RNG must like you
}
}