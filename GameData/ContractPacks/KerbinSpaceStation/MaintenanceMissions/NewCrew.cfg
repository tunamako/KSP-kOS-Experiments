CONTRACT_TYPE
{
    name = NewCrew
	title = Send a crew to @/targetVessel1
	genericTitle = Crew a space station.
    group = BasesandStations
	description = It seems that @/targetVessel1 doesn't have any crew on board. Go and fix this immediately!
	genericDescription = One of our stations doesn't have any crew.
    synopsis = Send a crew to @/targetVessel1
    completedMessage = Huzzah. Let the science begin!
    minExpiry = 1
    maxExpiry = 7
    cancellable = true
    declinable = true
    targetBody = @/targetBody1
    maxSimultaneous = 1
	rewardScience = 0.0
    rewardReputation = Random(1, 20.0)
    rewardFunds = Random(40000.0, 60000.0)
    failureReputation = Random(1, 10.0)
    failureFunds = Random(1, 10000.0)
    advanceFunds = Random(1, 10000.0)

	    DATA
    {
        type = Vessel
		uniquenessCheck = GROUP_ACTIVE
		requiredValue = true
        targetVessel1 = AllVessels().Where(v => v.VesselType() == Station && v.CrewCount()<1).SelectUnique()
		title = Must have an unmanned space station, with empty seats.
    }

DATA
{
    type = CelestialBody
	requiredValue = true
    targetBody1 = @/targetVessel1.CelestialBody()
	hidden = true
}

PARAMETER
{
    name = HasCrew
    type = HasCrew
	minCrew = Random(1,4)
}

PARAMETER
{
    name = Docking
    type = Docking
	vessel = @/targetVessel1
	title = Dock with @/targetVessel1
	hideChildren = true
	completeInSequence = true
}
}
	
