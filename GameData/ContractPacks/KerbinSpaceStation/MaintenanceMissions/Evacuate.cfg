CONTRACT_TYPE
{
    // Unique name of the contract type (required)
    name = Evacuate
    title = Evacuate @/targetVessel1
	genericTitle = Evacuate a Station.
    group = BasesandStations
    description = We're picking up some worrying readings from our instruments on @/targetVessel1. To be on the safe side, we think you had better evacuate! (quickly)
	genericDescription =  We're picking up some worrying readings on one of our stations. To be on the safe side, we think you had better evacuate! (quickly)
    synopsis = Evacuate @/targetVessel1
    completedMessage = Phew, it was a false alarm. Still, well done for saving everybody.
    minExpiry = 1
    maxExpiry = 30
    deadline = 500
    cancellable = false
    declinable = false
    prestige = Significant
    rewardScience = 0.0
    rewardReputation = Random(1, 20.0)
    rewardFunds = Random(40000, 60000.0)
    failureReputation = Random(1, 10.0)
    failureFunds = Random(1, 10000.0)
    advanceFunds = Random(1, 10000.0)
	targetBody = @/targetBody1
		
	    DATA
    {
        type = Vessel
		uniquenessCheck = GROUP_ACTIVE
		requiredValue = true
        targetVessel1 = AllVessels().Where(v => v.VesselType() == Station && v.CrewCount()>0).SelectUnique()
		title = Must have a crewed station in orbit.
    }
  DATA
    {
        type = List<Kerbal>

        // Get me some Kerbals to send home!
        StationCrew = @targetVessel1.Crew()
		hidden = true
    }

	DATA
	{
	type = CelestialBody
	requiredValue = true
	targetBody1 = @targetVessel1.CelestialBody()
	hidden = true
	}
	
	PARAMETER
	{
    name = VesselParameterGroup
    type = VesselParameterGroup
    title = Fully evacuate @/targetVessel1
    vessel = @/targetVessel1
	
		PARAMETER
		{
        name = HasCrew
        type = HasCrew
		minCrew = 0
		maxCrew = 0
		title = Leave no Kerbals on board @/targetVessel1.
		 }
	}
	
	PARAMETER
	{
    name = VesselParameterGroup
    type = VesselParameterGroup
    title = Perform an Emergency Landing on @/targetBody1
	completeInSequence = true
    define = ServiceModule
		PARAMETER
		{
		name = All
		type = All
			PARAMETER
			{
			name = HasCrew
			type = HasCrew
			kerbal = @/StationCrew
			}
			PARAMETER
			{
			name = Any
			type = Any
				PARAMETER
				{
				name = Land
				type = ReachState
				targetBody = @/targetBody1
				situation = LANDED
				}
				PARAMETER
				{
				name = Land
				type = ReachState
				targetBody = @/targetBody1
				situation = SPLASHED
				}
			}
		}
	REQUIREMENT
	{
    name = HasSurface
    type = Expression
	expression = @/targetBody1.HasSurface()
	}
}
REQUIREMENT
{
    name = CompleteContract
    type = CompleteContract
	contractType = Evacuate
	minCount = 0
	cooldownDuration = 10d
}
	REQUIREMENT
	{
    name = RandomRoll
    type = Expression
	expression = @BasesandStations:randomRoll < 3
	title = The RNG must like you
	}
}