//SSI-Start - SSI Aerospace: Join SSI Aerospace!

CONTRACT_TYPE
{

	sortKey = 0

//REQUIREMENTS FOR CONTRACT TO APPEAR

	REQUIREMENT
	{
		name = Funds
		type = Funds
		
		minFunds = @/membershipBalance
		
	}


//DATA NODES TO PROCESS FOR CONTRACT USE

	DATA
	{
		name = double
		type = double
		
		membershipBalance = Round(StartingFunds() * 0.10)
		membershipFee = 0 - @membershipBalance
		
	}
	

//CONTRACT DESCRIPTION

	name = SSI-Start
	title = Join SSI Aerospace!
	group = SSI Aerospace-Economy
	agent = SSI Aerospace
	
	description = Welcome to SSI Aerospace! We are an engineering cooperative focused on developing aerospace assets for use by the Kerbal Space Program.\n\nBased out of the Research & Development Facility at KSC, our member organizations include the Ford Carriage Company, Tesla Electrics, Wright Aeronautical, and Inigma Industries. I'm Inigma Kerman, founder of SSI, and I want to personally extend an invitation to your organization to join us!\n\nAs a member, your organization will gain access to contracts we have been offered by the Kerbal Space Program and other organizations, and be able to contract with our member organizations for any prototypes they have developed, as well as be able to enter into contracts with our Venture Capital Fund for any loans you may need.\n\nTo join, simply contribute 10% of your organization's starting funds to our Venture Capital Fund so we can start exploring a number of ideas together!
	
	synopsis = Accept this contract to join SSI Aerospace and receive all the benefits of membership including contracts, a prototype marketplace, and assistance funding.
	
	notes = Accepting this contract is required in order to unlock the GAP contract tree.
	
	completedMessage = Welcome to SSI Aerospace!\n\nWe're glad you've decided to join us. Be sure to check in with Mission Control to see what opportunties are now available to your organization!
	
//Contract Limits
   	maxCompletions = 1
   	maxSimultaneous = 1
//	weight = 100.0

	autoAccept = false
	declinable = true
	cancellable = true

	minExpiry = 7.0
	maxExpiry = 7.0
	deadline = 0

//Contract Reward Modifiers
	prestige = Trivial
   	targetBody = Kerbin

//Contract Rewards
  	advanceFunds = 0.0
	rewardFunds = @/membershipFee
	rewardReputation = 0.0
 	rewardScience = 0.0
	
//Contract Penalties
  	failureFunds = 0.0
 	failureReputation = 0.0


//PARAMETERS FOR CONTRACT COMPLETION

	PARAMETER
	{
		name = Timer
		type = Timer
		
		duration = 1s
		
		timerType = CONTRACT_ACCEPTANCE	
		
		failContract = false
	
	}
	
}