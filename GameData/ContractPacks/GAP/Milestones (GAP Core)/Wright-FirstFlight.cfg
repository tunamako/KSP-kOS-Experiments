//Wright-FirstFlight - Wright Aeronautical: Build and fly your first airplane!

CONTRACT_TYPE
{

	sortKey = a2

//REQUIREMENTS FOR CONTRACT TO APPEAR

	REQUIREMENT
	{
		name = Any
		type = Any

		REQUIREMENT
		{
			name = PartModuleUnlocked
			type = PartModuleUnlocked
			
			partModule = ModuleControlSurface

		}
		
		REQUIREMENT:NEEDS[FerramAerospaceResearch]
		{
			name = PartModuleUnlocked
			type = PartModuleUnlocked
			
			partModule = FARControllableSurface

		}
		
		REQUIREMENT:NEEDS[Firespitter]
		{
			name = PartModuleUnlocked
			type = PartModuleUnlocked
			
			partModule = FSliftSurface

		}
		
		REQUIREMENT:NEEDS[Firespitter]
		{
			name = PartModuleUnlocked
			type = PartModuleUnlocked
			
			partModule = FSwing

		}

	}

	REQUIREMENT
	{
		name = PartModuleUnlocked
		type = PartModuleUnlocked
		
		partModule = ModuleResourceIntake
	}


//DATA NODES TO PROCESS FOR CONTRACT USE

//Contract Specific VesselParameterGroup Definition Key (to prevent conflict with other active contracts)
	DATA
	{
		type = string
		
		craft = GAPcraftWrightFirstFlight
		
	}
	

//CONTRACT DESCRIPTION

	name = Wright-FirstFlight
	title = Build and fly your first airplane!
	group = Wright Aeronautical
	agent = Wright Aeronautical

	description = Thanks to your organization's research efforts, we have finally developed an air-breathing engine that should be light enough to mount to a glider, making controlled powered air flight possible!\n\nPrevious attempts to use solid rockets for gliders often ended in disaster and a scarcity of willing volunteers.  Wright Aeronautical is asking you to partner with them to build and test a flying machine using an air breathing engine. Your flying machine must have wings so it can control its flight, and must be able to land safely.\n\nThis is a whole new frontier where many have failed before, so there isn't any investment money avaialble to offer you at the moment. Wright Aeronautical is willing to cover labor costs, and SSI will cover snacks, and notify the press, however, you will need to put forth your own funds to acquire the parts necessary for this project. If you succeed, your pilot will acquire both valuable flying skills and your organization will become known worldwide.
	
	synopsis = It's time to construct a flying machine - one that will prove to the world that controlled powered air flight is indeed possible!

	notes = Wilbur and Orville both wanted to go, but the coin they flipped landed on its side - hence the reason why they're also asking you to put up a volunteer to pilot the contraption.

	completedMessage = Congratulations! The flight was a success!\n\nThe historic flight was thankfully caught on camera by the lone press agent who responded to the press invitation. His article about your flight has been read by millions, and you have now spured the imaginations of Kerbals everywhere.
	
//Contract Limits
   	maxCompletions = 1
   	maxSimultaneous = 1
//	weight = 100.0
	
	autoAccept = false
	declinable = true
	cancellable = true
	
	minExpiry = 7.0
	maxExpiry = 7.0
	deadline = 0
	
//Contract Reward Modifiers
	prestige = Trivial
   	targetBody = Kerbin
	
//Contract Rewards
  	advanceFunds = 2000.0
  	rewardFunds = 10000.0
  	rewardReputation = 50.0
 	rewardScience = 10.0

//Contract Penalties
  	failureFunds = 4000.0
 	failureReputation = 5.0

	
//BEHAVIOURS TO DO WHEN CREATING CONTRACT
	BEHAVIOUR
	{
		name = AwardExperience
		type = AwardExperience
		
		parameter = WrightLand
		experience = 1
		
	}


//PARAMETERS FOR CONTRACT COMPLETION

//Craft definition
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = Your flying machine must
		
		define = @/craft
		dissassociateVesselsOnContractCompletion = true
		
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = have a volunteer
		
			minCrew = 1
		
			disableOnStateChange = false
			hideChildren = true

		}

		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			title = have wings
			
			category = Aero
			
			disableOnStateChange = false
			hideChildren = true

		}
		
		PARAMETER
		{
			name = All
			type = All
			title = have an air breathing engine only
			
			PARAMETER
			{
				name = PartValidation
				type = PartValidation
				title = not have any solid rocket engines

				NONE
				{
					MODULE
					{
						EngineType = SolidBooster
						
					}
					
				}
				
				disableOnStateChange = false
				hideChildren = true
			
			}
			
			PARAMETER
			{
				name = PartValidation
				type = PartValidation
				title = not have any liquid rocket engines

				NONE
				{
					MODULE
					{
						EngineType = LiquidFuel
						
					}
					
				}
				
				disableOnStateChange = false
				hideChildren = true
			
			}
			

			PARAMETER
			{
				name = HasResource
				type = HasResource
				title = not have any solid rocket fuel
				
				resource = SolidFuel				
				minQuantity = 0.0
				maxQuantity = 0.0
				
				disableOnStateChange = false
				hideChildren = true
		
			}
			
			PARAMETER
			{
				name = HasResource
				type = HasResource
				title = not have any oxidizer
				
				resource = Oxidizer				
				minQuantity = 0.0
				maxQuantity = 0.0
				
				disableOnStateChange = false
				hideChildren = true
		
			}
			
			disableOnStateChange = false
		
		}
		
		disableOnStateChange = false

	}

//Contract Goals
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = get airborne
		
		vessel = @/craft
		
		PARAMETER
		{
			name = ReachState
			type = ReachState

			targetBody = Kerbin		
			situation = FLYING
			minSpeed = 15
			
			completeInSequence = true
			disableOnStateChange = true
			hideChildren = true

		}
	
		completeInSequence = true
		hideChildren = true
	
	}

//Recovery Parameter - Landing
	PARAMETER
	{
		name = WrightLand
		type = VesselParameterGroup
		title = and then land and stop anywhere
		
		vessel = @/craft

		PARAMETER
		{
			name = ReachState
			type = ReachState
			
			targetBody = Kerbin
			situation = LANDED
			maxSpeed = 0.0
			
			disableOnStateChange = false
			hideChildren = true

		}
	
		completeInSequence = true
		hideChildren = true
	
	}

//Recovery Parameter - Craft & Kerbal Safety Check
	PARAMETER
	{
		name = All
		type = All
		title = safely
		
		PARAMETER
		{
			name = VesselNotDestroyed
			type = VesselNotDestroyed
			title = without destroying your flying machine
			
			vessel = @/craft

		}
		
		PARAMETER
		{
			name = KerbalDeaths
			type = KerbalDeaths
			title = or killing anyone
			
			vessel = @/craft

		}
		
		completeInSequence = true
		disableOnStateChange = true
		
	}
	
}