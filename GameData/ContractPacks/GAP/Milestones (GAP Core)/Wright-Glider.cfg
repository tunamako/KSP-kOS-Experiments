//Wright-Glider - Wright Aeronautical: Build and fly a glider!

CONTRACT_TYPE
{

	sortKey = a1

//REQUIREMENTS FOR CONTRACT TO APPEAR

	REQUIREMENT
	{
		name = PartUnlocked
		type = PartUnlocked
		
		part = seatExternalCmd
	
	}

	
	REQUIREMENT
	{
		name = Any
		type = Any

		REQUIREMENT
		{
			name = PartModuleUnlocked
			type = PartModuleUnlocked
			
			partModule = ModuleControlSurface

		}
		
		REQUIREMENT:NEEDS[FerramAerospaceResearch]
		{
			name = PartModuleUnlocked
			type = PartModuleUnlocked
			
			partModule = FARControllableSurface

		}
		
		REQUIREMENT:NEEDS[Firespitter]
		{
			name = PartModuleUnlocked
			type = PartModuleUnlocked
			
			partModule = FSliftSurface

		}
		
		REQUIREMENT:NEEDS[Firespitter]
		{
			name = PartModuleUnlocked
			type = PartModuleUnlocked
			
			partModule = FSwing

		}

	}


//DATA NODES TO PROCESS FOR CONTRACT USE

//Contract Specific VesselParameterGroup Definition Key (to prevent conflict with other active contracts)
	DATA
	{
		type = string
		
		craft = GAPcraftWrightGlider
		
	}
	

//CONTRACT DESCRIPTION

	name = Wright-Glider
	title = Build and fly a glider!
	group = Wright Aeronautical
	agent = Wright Aeronautical

	description = Wilbur and Orville Kerman have been overseeing SSI's flying machine project and have formed a new venture company called Wright Aeronautical to explore the frontiers of powered air flight. To get started, they want you to develop a prototype gilder to test a few flight control concepts. Your glider must have a command seat, wings to control its flight, and be able to land safely.\n\nGetting the glider up into the air is up to your imagination, however Jebediah Kerman recommends the tried and true solid rocket approach. That or jumping off a cliff. Your choice. Whatever you decide to do, just make sure your pilot survives as we don't want any bad publicity this early into our program. To be counted as a true glider, you will need to decouple any boosters you decide to use.

	synopsis = Making a glider isn't that hard. Getting it up off the ground, however, will present a challenge.

	notes = Jebediah hints that if you decide to go with a solid rocket launch assist, that you include a means to decouple the solid rockets for a smoother flight.

	completedMessage = The glider flight test was a success!\n\nThe fact that you landed safely is even more amazing.
	
//Contract Limits
   	maxCompletions = 1
   	maxSimultaneous = 1
//	weight = 150.0
	
	autoAccept = false
	declinable = true
	cancellable = true
	
	minExpiry = 7.0
	maxExpiry = 7.0
	deadline = 0
	
//Contract Reward Modifiers
	prestige = Trivial
   	targetBody = Kerbin
	
//Contract Rewards
  	advanceFunds = 2000.0
  	rewardFunds = 3000.0
  	rewardReputation = 5.0
 	rewardScience = 5.0

//Contract Penalties
  	failureFunds = 2000.0
 	failureReputation = 5.0
	

//PARAMETERS FOR CONTRACT COMPLETION

//Craft definition
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = Your glider must
		
		define = @/craft
		dissassociateVesselsOnContractCompletion = true
		
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = have a volunteer
		
			minCrew = 1
		
			disableOnStateChange = false
			hideChildren = true

		}

		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			title = have a command seat
			
			part = seatExternalCmd			

			disableOnStateChange = false
			hideChildren = true

		}
		
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			title = have wings
			
			category = Aero
			
			disableOnStateChange = false
			hideChildren = true

		}
		
		PARAMETER
		{
			name = All
			type = All
			
			title = not have any engines after launch
			
			PARAMETER
			{
				name = PartValidation
				type = PartValidation

				NONE
				{
					MODULE
					{
						name = ModuleEngines
						
					}
					
				}
				
				disableOnStateChange = false
				hideChildren = true
				hidden = true
				
			}
			
			PARAMETER
			{
				name = PartValidation
				type = PartValidation

				NONE
				{
					MODULE
					{
						name = ModuleEnginesFX
						
					}
					
				}
				
				disableOnStateChange = false
				hideChildren = true
				hidden = true
				
			}
			
			PARAMETER:NEEDS[Firespitter]
			{
				name = PartValidation
				type = PartValidation

				NONE
				{
					MODULE
					{
						name = FSengine
						
					}
					
				}
				
				disableOnStateChange = false
				hideChildren = true
				hidden = true
				
			}
			
			disableOnStateChange = false
			hideChildren = true
			
		}
		
		disableOnStateChange = false

	}

//Contract Goals
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = get airborne
		
		vessel = @/craft
		
		PARAMETER
		{
			name = ReachState
			type = ReachState

			targetBody = Kerbin		
			situation = FLYING
			minSpeed = 15
			
			completeInSequence = true
			disableOnStateChange = true
			hideChildren = true

		}
	
		completeInSequence = true
		hideChildren = true
	
	}

//Recovery Parameter - Landing
	PARAMETER
	{
		name = WrightLand
		type = VesselParameterGroup
		title = and then land and stop anywhere
		
		vessel = @/craft

		PARAMETER
		{
			name = ReachState
			type = ReachState
			
			targetBody = Kerbin
			situation = LANDED
			maxSpeed = 0.0
			
			disableOnStateChange = false
			hideChildren = true

		}
	
		completeInSequence = true
		hideChildren = true
	
	}

//Recovery Parameter - Craft & Kerbal Safety Check
	PARAMETER
	{
		name = All
		type = All
		title = safely
		
		PARAMETER
		{
			name = VesselNotDestroyed
			type = VesselNotDestroyed
			title = without destroying your flying machine
			
			vessel = @/craft

		}
		
		PARAMETER
		{
			name = KerbalDeaths
			type = KerbalDeaths
			title = or killing anyone
			
			vessel = @/craft

		}
		
		completeInSequence = true
		disableOnStateChange = true
		
	}
	
}