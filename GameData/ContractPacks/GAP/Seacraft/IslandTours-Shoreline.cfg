//IslandTours-Shoreline - KSC Island Tours: KSC Shoreline Tour - Tourists: (2-6)

CONTRACT_TYPE
{
	sortKey = 1a

//REQUIREMENTS FOR CONTRACT TO APPEAR

//Any wheeled part will unlock this contract (to move boats to water)

	REQUIREMENT
	{
		name = PartModuleUnlocked
		type = PartModuleUnlocked
		
		partModule = ModuleWheelBase
		
	}
		
	REQUIREMENT
	{
		name = PartModuleUnlocked
		type = PartModuleUnlocked
		
		partModule = ModuleResourceIntake
	}
	

//DATA NODES TO PROCESS FOR CONTRACT USE

//Contract Specific VesselParameterGroup Definition Key (to prevent conflict with other active contracts)
	DATA
	{
		type = string
		
		craft = GAPcraftIslandToursShoreline
		
	}
	
//Passenger Data
	DATA
	{
		type = int
		
		numPassengers = Random(2,6)
	
	}
	
	DATA
	{
		type = List<Kerbal>
		
		kerbals = NewKerbals(6).Random(@numPassengers)
		
		hidden = true
		
	}
	
	
//CONTRACT DESCRIPTION

	name = IslandTours-Shoreline
	title = KSC Shoreline Tour - Seats: @/numPassengers
	genericTitle = KSC Shoreline Tour - (2-6 Passengers)
	group = KSC Island Tours
	agent = KSC Island Tours

	description = Tourists to KSC come not just for the launches, but also to see the debris fields around KSC. Rich in historical value, the best treasures are those seen through a glass bottom boat near the KSC shoreline.

	synopsis = The neat thing about working for KSC Island Tours is that they pay in advance per passenger, for all their contracts!

	notes = Time to get wet! Take @/numPassengers tourists on a tour of KSC's shoreline. You must use a boat and pilot it within 100m of the waypoints.

	completedMessage = Shoreline tour completed! KSC Island Tours thanks you for your service.

//Contract Limits
   	maxCompletions = 0
   	maxSimultaneous = 1
//	weight = 5.0

	autoAccept = false
	declinable = true
	cancellable = true

	minExpiry = 7.0
	maxExpiry = 7.0
	deadline = 0

//Contract Reward Modifiers
	prestige = Trivial
   	targetBody = Kerbin

//Contract Rewards
  	advanceFunds = @/numPassengers * 2000.0
  	rewardFunds = 0.0
  	rewardReputation = 0.0
 	rewardScience = 0.0

//Contract Penalties
  	failureFunds = @/numPassengers * 2000.0
 	failureReputation = 20.0
	

//BEHAVIOURS TO DO WHEN CREATING CONTRACT

	BEHAVIOUR
	{
		name = SpawnPassengers
		type = SpawnPassengers
		
		kerbal = @/kerbals
		
		kerbalType = Tourist
		
	}
	
	BEHAVIOUR
	{
        name = WaypointGenerator
        type = WaypointGenerator
	
		PQS_CITY
		{
			name = KSC Shoreline Tour Start
			icon = marker
			
			pqsCity = KSC
			pqsOffset = 2197.87757133291, 1530.08245552771, -44.1550643325954
			altitude = 5
			
		}
		
		PQS_CITY
		{
			name = KSC Shoreline Tour End
			icon = marker
			
			pqsCity = KSC
			pqsOffset = 3265.13915381182, -1347.2747900578, -48.7243988233913
			altitude = 5
			
		}
	
	}
	

//PARAMETERS FOR CONTRACT COMPLETION

//Craft definition
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = Your craft must
		
		define = @/craft
		dissassociateVesselsOnContractCompletion = true

		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = have a certified engineer
			
			minCrew = 1
			trait = Engineer
		
			disableOnStateChange = false
			hideChildren = true

		}
		
		PARAMETER
		{
			name = HasCrewCapacity
			type = HasCrewCapacity
			title = have at least @/numPassengers passenger seats
			
			minCapacity = @/numPassengers + 1
			
			disableOnStateChange = false
			
		}
		
	//Passenger Manifest - Load Tourists
		PARAMETER
		{
			name = All
			type = All
			title = load all tourists
			
			PARAMETER
			{
				name = HasPassengers
				type = HasPassengers
				title = @kerbal.First()
		
				ITERATOR
				{
					type = Kerbal
					kerbal = @/kerbals
					
				}
				
				disableOnStateChange = false
				hideChildren = true
				
			}
			
			disableOnStateChange = false

		}
		
		disableOnStateChange = false

	}
	
//Contract Goals
//Navigate to Waypoints

	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = start the tour at the shoreline waypoint
		
		vessel = @/craft
		
		PARAMETER
		{
			name = VisitWaypoint
			type = VisitWaypoint
			
			index = 0
			distance = 100
			hideOnCompletion = true
			
			completeInSequence = true
			disableOnStateChange = true
			hideChildren = true
			
		}
		
		PARAMETER
		{			            
			name = ReachState   
			type = ReachState

			situation = SPLASHED
			
			completeInSequence = true
			disableOnStateChange = true
			hideChildren = true
			
		}
	
		completeInSequence = true
		disableOnStateChange = true
		hideChildren = true

	}


	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = end the tour at the shoreline waypoint
		
		vessel = @/craft
		
		PARAMETER
		{
			name = VisitWaypoint
			type = VisitWaypoint
			
			index = 1
			distance = 100
			hideOnCompletion = true
			
			completeInSequence = true
			disableOnStateChange = true
			hideChildren = true
			
		}
		
		PARAMETER
		{			            
			name = ReachState   
			type = ReachState

			situation = SPLASHED
			
			completeInSequence = true
			disableOnStateChange = true
			hideChildren = true
			
		}
	
		completeInSequence = true
		disableOnStateChange = true
		hideChildren = true

	}
	
//Recovery Parameter - Landing
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = beach your boat or land your seaplane anywhere on land
		
		vessel = @/craft

		PARAMETER
		{
			name = ReachState
			type = ReachState
			
			targetBody = Kerbin
			situation = LANDED
			maxSpeed = 0.0
			
			disableOnStateChange = false
			hideChildren = true

		}
	
		completeInSequence = true
		hideChildren = true
	
	}

//Recovery Parameter - Craft & Kerbal Safety Check
	PARAMETER
	{
		name = All
		type = All
		title = safely
		
		PARAMETER
		{
			name = VesselNotDestroyed
			type = VesselNotDestroyed
			title = without destroying your aircraft
			
			vessel = @/craft

		}
		
		PARAMETER
		{
			name = KerbalDeaths
			type = KerbalDeaths
			title = or killing anyone
			
			vessel = @/craft

		}
		
		completeInSequence = true
		disableOnStateChange = true
		
	}
	
//Recovery Parameter - Recover Kerbals
	PARAMETER
	{
		name = All
		type = All
		title = and recover all tourists
		
		PARAMETER
		{
			name = RecoverKerbal
			type = RecoverKerbal
			title = @kerbal.First()
	
			ITERATOR
			{
				type = Kerbal
				kerbal = @/kerbals
				
			}
			
			hideChildren = true
			
		}
		
	}
	
}