//CoastGuard-RescuePilot - KSC Coast Guard: Mayday: (PilotName)

CONTRACT_TYPE
{


//REQUIREMENTS FOR CONTRACT TO APPEAR
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract

		contractType = CoastGuard-Certification
		minCount = 1
		
	}
	
	
//DATA NODES TO PROCESS FOR CONTRACT USE

//Contract Specific VesselParameterGroup Definition Key (to prevent conflict with other active contracts)
	DATA
	{
		type = string
		
		craft = GAPcraftCoastGuardRescuePilot
		
	}

//List of Coast Guard Team Members
	DATA
	{
		type = List<Kerbal>
		
		kerbalsCoastGuard = [ NewKerbal( Male , "Lt. Dan Kerman" , "Pilot") ]
		
		hidden = true
		
	}

//Rank List
	DATA
	{
		type = List<string>
		
		rankList = [ "Col. " , "Capt. " , "Lt. "]
		
	}
	
//Selected Rank
	DATA
	{
		type = string
		
		rank = @/rankList.Random()
		rankedKerbal = @rank + RandomKerbalName(Random())
		
		hidden = true
		
	}
	
//List of Kerbals in Distress
	DATA
	{
		type = List<Kerbal>
		
		kerbalsInDistress = [ NewKerbal( Male , @/rankedKerbal , "Pilot" ) ]
		
		hidden = true
	
	}

//Pick 1 Zone for Distress Location for Use by Waypoint Generator Behavior
	DATA
	{
		type = List<int>
		
		zoneList = [ 0, 1 , 2 , 3 , 4 ].Random(1)
		
		hidden = true

	}
	
//Distress Location and Carrier Location Pulled from Waypoint Generator Behaviour
	DATA
	{
		type = double
		
		distressLat = @/SeaZones.Waypoints().ElementAt(5).Latitude()
		distressLon = @/SeaZones.Waypoints().ElementAt(5).Longitude()

	}

	
//CONTRACT DESCRIPTION

	name = CoastGuard-RescuePilot
	title = Mayday: @/kerbalsInDistress.First()
	genericTitle = Mayday: Rescue Pilot
	group = KSC Coast Guard
	agent = KSC Coast Guard

	description = The KSC Coast Guard received a mayday from @/kerbalsInDistress.First() who reported trouble with his plane and had to eject. Send out a Search and Rescue team to save the pilot and return him to a Coast Guard landing area for a safe recovery.

	genericDescription = The KSC Coast Guard received a mayday from a pilot who reported trouble with his plane and had to eject. Send out a Search and Rescue team to save the pilot and return him to a Coast Guard landing area for a safe recovery.
	
	synopsis = KSC Coast Guard: Our motto is Always Ready - Kemper Keratus!

	notes = Rescue @/kerbalsInDistress.First() and bring them to any KSC Coast Guard rescue station for a safe recovery.

	completedMessage = KSC Coast Guard rescue mission accomplished!\n\n@/kerbalsInDistress.First() was retrieved from the area with minimal injury. Your successful operation hasn't gone unnoticed by the Kerbal Space Program. Check in with Mission Control for your next mission.

//Contract Limits
	maxCompletions = 0
	maxSimultaneous = 1
//	weight = 10.0

	autoAccept = false
	declinable = true
	cancellable = true

	minExpiry = 1.0
	maxExpiry = 1.0
	deadline = 1

//Contract Reward Modifiers
	prestige = Trivial
	targetBody = Kerbin
	
//Contract Rewards
  	advanceFunds = 2000.0
	rewardFunds = 16000.0
  	rewardReputation = 25.0
 	rewardScience = 0.0
	
//Contract Penalties
  	failureFunds = 2000.0
	failureReputation = 50.0


//BEHAVIOURS TO DO WHEN CREATING CONTRACT
	BEHAVIOUR
	{
		name = SpawnPassengers
		type = SpawnPassengers
		
		kerbal = @/kerbalsCoastGuard.ElementAt(0)
		kerbalType = Crew
		
	}

	BEHAVIOUR
	{
		name = SpawnKerbal
		type = SpawnKerbal

		KERBAL
		{
			kerbal = @/kerbalsInDistress.First()
			kerbalType = Unowned
			owned = false
			addToRoster = false

			lat = @/distressLat
			lon = @/distressLon
			heading = 300

		}
		
	}

//Generate Sea Zones and Define Random Waypoints
	BEHAVIOUR
	{
		name = SeaZones
		type = WaypointGenerator
		
		//Rescue Areas
		
		PQS_CITY
		{
			name = KSC Sea North Central Waypoint
			
			targetBody = Kerbin
			pqsCity = IslandAirfield 
			pqsOffset = -1847.25488069029, -20058.7598335702, -453.396403818988
			
			hidden = true
			
		}		

		PQS_CITY
		{
			name = KSC Sea Central Central Waypoint
			
			targetBody = Kerbin
			pqsCity = IslandAirfield 
			pqsOffset = 20550.8508273184, 1062.93579726917, -468.244493385362
			
			hidden = true
			
		}
		
		PQS_CITY
		{
			name = KSC Sea South Central Waypoint
			
			targetBody = Kerbin
			pqsCity = IslandAirfield 
			pqsOffset = 29140.5802921804, 15569.5873430977, -1025.49583004066
			
			hidden = true
			
		}
		
		PQS_CITY
		{
			name = East Islands Sea Central Waypoint
			
			targetBody = Kerbin
			pqsCity = IslandAirfield 
			pqsOffset = -13479.0987451144, 22129.2856859656, -674.933362233103
			
			hidden = true
			
		}
		
		PQS_CITY
		{
			name = South Islands Sea Central Waypoint
			
			targetBody = Kerbin
			pqsCity = IslandAirfield 
			pqsOffset = 4175.6529485127, 49157.8040008561, -2146.85443912575
			
			hidden = true
			
		}
		
		//Mayday Random Waypoint Within Random Sea Zone
	    RANDOM_WAYPOINT_NEAR
		{
		
			name = Mayday Search Area
			icon = marker
			
			targetBody = Kerbin
			nearIndex = @/zoneList.ElementAt(0)
			maxDistance = 40000.0
			altitude = 0.0
		
		}
		
	}
	
	BEHAVIOUR
	{
		name = LandingZones
		type = WaypointGenerator
		
		//Island Airfield Waypoint
		PQS_CITY
		{
			name = KSC Island Airfield
			icon = marker
			
			targetBody = Kerbin
			pqsCity = IslandAirfield
			pqsOffset = -44.0509605753032, -247.057216484056, 18.0797328829649
			altitude = 24
			hidden = true
		
		}

	}


	
//PARAMETERS FOR CONTRACT COMPLETION

//Craft definition
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = Your craft must
		
		define = @/craft
		dissassociateVesselsOnContractCompletion = true

		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = have a Kerbal in command
			
			minCrew = 1
		
			disableOnStateChange = false
			hideChildren = true

		}
		
		PARAMETER
		{
			name = HasCrewCapacity
			type = HasCrewCapacity
			title = have at least 2 passenger seats
			
			minCapacity = 3
			
			disableOnStateChange = false
			
		}
		
	//Passenger Manifest - Load Passengers
		PARAMETER
		{
			name = All
			type = All
			
			title = load your Coast Guard rescue officer
			
			PARAMETER
			{
				name = HasPassengers
				type = HasPassengers
				title = @kerbal.First()
		
				ITERATOR
				{
					type = Kerbal
					kerbal = @/kerbalsCoastGuard
					
				}
				
				hideChildren = true
				
			}

		}
		
		disableOnStateChange = false

	}

//Contract Goals
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = fly to the search area
		
		vessel = @/craft
		
		PARAMETER
		{
			name = VisitWaypoint
			type = VisitWaypoint
			
			index = 5
			distance = 500
			hideOnCompletion = true
			
			disableOnStateChange = true
			hideChildren = true
			
		}

		disableOnStateChange = true
		hideChildren = true
		
	}
	
	PARAMETER
	{
		name = HasCrew
		type = HasCrew
		title =  rescue test pilot
		
		kerbal = @/kerbalsInDistress

		completeInSequence = true
		disableOnStateChange = false
	
	}

//Recovery Parameter - Landing
	PARAMETER
	{
		name = Any
		type = Any
		title = and then land and stop
		
		PARAMETER
		{
			name = Any
			type = Any
			title = at one of the following recovery areas
			
			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = the KSC Island Airfield
				
				vessel = @/craft
				
				REQUIREMENT
				{
					name = CompleteContract
					type = CompleteContract

					contractType = KSP-IslandPrep
					minCount = 1
					
				}

				PARAMETER
				{			            
					name = ReachState   
					type = ReachState

					situation = LANDED
					maxSpeed = 0.0
					
					completeInSequence = true
					disableOnStateChange = false
					hideChildren = true
					
				}
				
				PARAMETER
				{
					name = VisitWaypoint
					type = VisitWaypoint
					index = 6

					distance = 690
					
					completeInSequence = true
					disableOnStateChange = false
					hideChildren = true
					
				}

				disableOnStateChange = false
				hideChildren = true	

			}
			
			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = the KSC Runway
				
				vessel = @/craft

				PARAMETER
				{
					name = ReachState
					type = ReachState
					
					targetBody = Kerbin
					biome = Runway
					situation = LANDED
					maxSpeed = 0.0

					disableOnStateChange = false
					hideChildren = true

				}
				
				disableOnStateChange = false
				hideChildren = true

			}
			
			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = the Vehicle Assembly Building Helipad
				
				vessel = @/craft
				
				REQUIREMENT
				{
					name = CompleteContract
					type = CompleteContract

					contractType = SSI-Helicopter
					minCount = 1
					
				}

				PARAMETER
				{
					name = ReachState
					type = ReachState
					
					targetBody = Kerbin
					biome = VAB Main Building
					situation = LANDED
					maxSpeed = 0.0

					disableOnStateChange = false
					hideChildren = true

				}
				
				disableOnStateChange = false
				hideChildren = true		

			}
			
			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = or the Spaceplane Hangar Air Terminal
				
				vessel = @/craft

				PARAMETER
				{
					name = ReachState
					type = ReachState
					
					targetBody = Kerbin
					biome = SPH
					situation = LANDED
					maxSpeed = 0.0

					disableOnStateChange = false
					hideChildren = true

				}
				
				disableOnStateChange = false
				hideChildren = true

			}
			
			completeInSequence = true
			disableOnStateChange = false
		
		}
		
		completeInSequence = true
		disableOnStateChange = false

	}

//Recovery Parameter - Craft & Kerbal Safety Check
	PARAMETER
	{
		name = All
		type = All
		title = safely
		
		PARAMETER
		{
			name = VesselNotDestroyed
			type = VesselNotDestroyed
			title = without destroying your rescue craft
			
			vessel = @/craft

		}

		PARAMETER
		{
			name = All
			type = All
			title = or killing anyone
			
			PARAMETER
			{
				name = KerbalDeaths
				type = KerbalDeaths
				title = or killing your crew
				
				vessel = @/craft
				
				hideChildren = true

			}
			
			PARAMETER
			{
				name = KerbalDeaths
				type = KerbalDeaths
				title = or killing anyone you need to rescue
		
				kerbal = @/kerbalsInDistress
				
				hideChildren = true
				
			}
			
			disableOnStateChange = false
			hideChildren = true
		
		}
		
		completeInSequence = true
		disableOnStateChange = true
		
	}
	
//Recovery Parameter - Recover Kerbals
	PARAMETER
	{
		name = All
		type = All
		title = and recover
		
		PARAMETER
		{
			name = RecoverKerbal
			type = RecoverKerbal
			title = @kerbal.First()
	
			ITERATOR
			{
				type = Kerbal
				kerbal = @/kerbalsCoastGuard
				
			}
			
			hideChildren = true
			
		}
		
		PARAMETER
		{
			name = RecoverKerbal
			type = RecoverKerbal
			title = @kerbal.First()
	
			ITERATOR
			{
				type = Kerbal
				kerbal = @/kerbalsInDistress
				
			}
			
			hideChildren = true
			
		}
		
	}
	
}