//IslandTours-Flight-38 - KSC Island Tours: Seaplane: Flight 38 - Max Seats: (4-8)

CONTRACT_TYPE
{


//REQUIREMENTS FOR CONTRACT TO APPEAR

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		
		contractType = KSP-IslandPrep
		minCount = 1

	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = SSI-Seaplane
		minCount = 1

	}


//DATA NODES TO PROCESS FOR CONTRACT USE

//Contract Specific VesselParameterGroup Definition Key (to prevent conflict with other active contracts)
	DATA
	{
		type = string
		
		craft = GAPcraftIslandToursFlight38
		
	}

//Island Staff Data
	DATA
	{
		type = List<Kerbal>
		
		kerbalsIslandStaff = [ NewKerbal( Male , "Nightingale Kerman" , "Engineer") ]
		
		hidden = true
		
	}

//Outbound Passenger Data
	DATA
	{
		type = int
		
		numPassengersOutbound = Random(4, 8)
	
	}
	
	DATA
	{
		type = List<Kerbal>
		
		kerbalsOutbound = [ NewKerbal(), NewKerbal(), NewKerbal(), NewKerbal(), NewKerbal(), NewKerbal(), NewKerbal(), NewKerbal() ].Random(@numPassengersOutbound)
		
		hidden = true
		
	}
	
//Inbound Passenger Data
	DATA
	{
		type = int
		
		numPassengersInbound = Random(2, 4)

	}
	
	DATA
	{
		type = List<Kerbal>
		
		kerbalsOnIsland = [ NewKerbal(), NewKerbal(), NewKerbal(), NewKerbal()]
		
		hidden = true
		
	}
	
	DATA
	{
		type = List<Kerbal>
		
		kerbalsInbound = @kerbalsOnIsland.Random(@numPassengersInbound)
		
		hidden = true
		
	}
	
//Total Passenger Data	
	//total passengers for this contract
	DATA
	{
		type = int
		
		numPassengersTotal = @numPassengersOutbound + @numPassengersInbound
	}
	
	//maximum number of seats required for this contract
	DATA
	{
		type = int
		
		numSeats = @numPassengersOutbound > @numPassengersInbound ? @numPassengersOutbound : @numPassengersInbound
	
	}


//CONTRACT DESCRIPTION

	name = IslandTours-Flight-38
	title = Seaplane: Flight 38 - Max Seats: @/numSeats
	genericTitle = Seaplane: Flight 38 - (2-4 Passengers)
	group = KSC Island Tours
	agent = KSC Island Tours

	description = KSC Island Tours is impressed with your ability to wow the tourists at KSC and are asking if you'd be interested in ferrying @/numPassengersOutbound high paying tourists to the beach resort tiki huts at Nightingales's Cay which is on the southern shore of the South Island of the KSC Isles, also known as Valentina's Island. If so, @/numPassengersInbound tourists have completed their stay there already, and also would like a lift back to KSC.\n\nTotal Passengers: @numPassengersTotal\nOutbound Passengers: @/numPassengersOutbound | Inbound Passengers: @/numPassengersInbound
	
	genericDescription = KSC Island Tours is impressed with your ability to wow the tourists at KSC and are asking if you'd be interested in ferrying high paying tourists to the beach resort tiki huts at Nightingales's Cay which is on the southern shore of the South Island of the KSC Isles, also known as Valentina's Island. If so, a few tourists have completed their stay there already, and also would like a lift back to KSC.

	synopsis = This is a round trip flight. Deliver @/numPassengersOutbound passengers to Nightingale's Cay. Exchange them for @/numPassengersInbound waiting passengers and bring them to KSC.

	notes = You may use a seaplane (preferred), helicopter, or VTOL.

	completedMessage = Nightingale is pleased to have @/numPassengersOutbound new visitors to his happenin' place. KSC Island Tours thanks you for your service!

//Contract Limits
	maxCompletions = 0
   	maxSimultaneous = 1
//	weight = 10.0

	autoAccept = false
	declinable = true
	cancellable = true
	
	minExpiry = 7.0
	maxExpiry = 7.0
	deadline = 0

//Contract Reward Modifiers
	prestige = Trivial
	targetBody = Kerbin

//Contract Rewards
  	advanceFunds = @/numPassengersOutbound * 3500.0
  	rewardFunds = @/numPassengersInbound * 3500.0
  	rewardReputation = 0.0
	rewardScience = 0.0

//Contract Penalties	
  	failureFunds = @/numPassengersTotal * 4400.0
 	failureReputation = 40.0


//BEHAVIORS TO DO WHEN CREATING CONTRACT

	BEHAVIOUR
	{
		name = SpawnIslandStaff
		type = SpawnKerbal

		KERBAL
		{
			kerbal = @/kerbalsIslandStaff.ElementAt(0)
			owned = false
			addToRoster = false
			
			pqsCity = IslandAirfield
			pqsOffset = 11482.8888459748, 23195.0201781236, -671.327826027438
			alt = 20
			heading = 191
			
		}
		
	}

	BEHAVIOUR
	{
		name = SpawnOutboundPassengers
		type = SpawnPassengers
		
		kerbal = @/kerbalsOutbound
		
		kerbalType = Crew
		
	}
	
	BEHAVIOUR
	{
		name = SpawnKerbalsOnIsland
		type = SpawnKerbal

		KERBAL
		{
			kerbal = @/kerbalsOnIsland.ElementAt(0)
			owned = false
			addToRoster = false
			
			pqsCity = IslandAirfield
			pqsOffset = 11470.0690567115, 23196.7678581456, -669.351188105356
			alt = 20
			heading = 90
			
		}
		
		KERBAL
		{
			kerbal = @/kerbalsOnIsland.ElementAt(1)
			owned = false
			addToRoster = false
			
			pqsCity = IslandAirfield
			pqsOffset = 11470.0690567115, 23196.7678581456, -669.351188105356
			alt = 20
			heading = 180
			
		}
		
		KERBAL
		{
			kerbal = @/kerbalsOnIsland.ElementAt(2)
			owned = false
			addToRoster = false
			
			pqsCity = IslandAirfield
			pqsOffset = 11472.0690567115, 23197.7678581456, -669.351188105356
			alt = 20
			heading = 270
			
		}
		
		KERBAL
		{
			kerbal = @/kerbalsOnIsland.ElementAt(3)
			owned = false
			addToRoster = false
			
			pqsCity = IslandAirfield
			pqsOffset = 11471.0690567115, 23197.7678581456, -669.351188105356
			alt = 20
			heading = 270
			
		}
		
	}

	BEHAVIOUR
	{
		name = SpawnCayDock
		type = SpawnVessel

		VESSEL
		{
			name = Cay Dock
			craftURL = ContractPacks/GAP/Assets/Sea/Dock.craft
			flagURL = ContractPacks/GAP/Assets/Flags/KSCIslandTours
			vesselType = Base
			owned = false
			
			pqsCity = IslandAirfield
			pqsOffset = 11486.1575391202, 23202.4235570873, -674.182826470496
			heading = 198

		}
		
	}

	BEHAVIOUR
	{
		name = SpawnFishNChips
		type = SpawnVessel

		VESSEL
		{
			name = FishNChips			
			craftURL = ContractPacks/GAP/Assets/Sea/Tour Boat.craft
			flagURL = ContractPacks/GAP/Assets/Flags/KSCIslandTours
			vesselType = Ship
			owned = false
			
			pqsCity = IslandAirfield
			pqsOffset = 11475.6631548663, 23212.4327015801, -673.970972905692
			heading = 0
			pitch = 270
			
		}
		
	}
	
	BEHAVIOUR
	{
		name = SpawnTiki1
		type = SpawnVessel

		VESSEL
		{
			name = Tiki Hut 1
			craftURL = ContractPacks/GAP/Assets/Land/Tiki Hut.craft
			flagURL = ContractPacks/GAP/Assets/Flags/KSCIslandTours
			vesselType = Base
			owned = false
			
			pqsCity = IslandAirfield
			pqsOffset = 11464.6071566473, 23179.2483194294, -658.541745985451
			heading = 200
			pitch = 270
			alt = 14 

		}
		
	}
	
	BEHAVIOUR
	{
		name = SpawnTiki2
		type = SpawnVessel
	
		VESSEL
		{
			name = Tiki Hut 2
			craftURL = ContractPacks/GAP/Assets/Land/Tiki Hut.craft
			flagURL = ContractPacks/GAP/Assets/Flags/KSCIslandTours
			vesselType = Base
			owned = false
			
			pqsCity = IslandAirfield
			pqsOffset = 11478.2590820091, 23178.67620433, -661.335804493196
			heading = 200
			pitch = 275
			alt = 11.5
			
		}
		
	}
	
	BEHAVIOUR
	{
		name = SpawnTiki3
		type = SpawnVessel

		VESSEL
		{
			name = Tiki Hut 3
			craftURL = ContractPacks/GAP/Assets/Land/Tiki Hut.craft
			flagURL = ContractPacks/GAP/Assets/Flags/KSCIslandTours
			vesselType = Base
			owned = false
			
			pqsCity = IslandAirfield
			pqsOffset = 11459.244745864, 23193.0548879867, -662.891364874842
			heading = 200
			pitch = 270
			alt = 11
			
		}
	
	}

//Remove all SpawnVessels when done
	BEHAVIOUR
	{
		name = DestroyVessel
		type = DestroyVessel
		
		vessel = Cay Dock
		vessel = FishNChips
		vessel = Tiki Hut 1
		vessel = Tiki Hut 2
		vessel = Tiki Hut 3
	
		onState = CONTRACT_COMPLETED
	
	}
	
//Generate Island and Cay Waypoints	
	BEHAVIOUR
	{
        name = WaypointGenerator
        type = WaypointGenerator
		
		PQS_CITY
		{
			name = Valentina's Island
			icon = marker
			
			pqsCity = IslandAirfield
			pqsOffset = 10366.627166856, 23361.2467133673, 221.869934428483
			
		}
		
		PQS_CITY
		{
			name = Nightingale's Cay
			icon = marker
			
			pqsCity = IslandAirfield
			pqsOffset = 11483.1934275414, 23196.4335340857, -671.961082304042
			parameter = VisitWaypoint0
			
		}
	
	}


//PARAMETERS FOR CONTRACT COMPLETION

//Craft definition
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = Your craft must
		
		define = @/craft
		dissassociateVesselsOnContractCompletion = true

		PARAMETER
		{
			name = Any
			type = Any
			title = have a certified engineer or pilot
			
			PARAMETER
			{
				name = HasCrew
				type = HasCrew
				
				trait = Pilot
				minCrew = 1
				
				hideChildren = true
				disableOnStateChange = false
				
			}
			
			PARAMETER
			{
				name = HasCrew
				type = HasCrew
				
				trait = Engineer
				minCrew = 1
				
				disableOnStateChange = false
				hideChildren = true
				
			}
			
			disableOnStateChange = false
			hideChildren = true
			
		}
		
		PARAMETER
		{
			name = HasCrewCapacity
			type = HasCrewCapacity
			title = have at least @/numSeats passenger seats
			
			minCapacity = @/numSeats + 1
			
			disableOnStateChange = false
			
		}
		
	//Passenger Manifest - Load Outbound Passengers
		PARAMETER
		{
			name = All
			type = All
			
			title = load all outbound passengers
			
			PARAMETER
			{
				name = HasCrew
				type = HasCrew
				title = @kerbal.First()
		
				ITERATOR
				{
					type = Kerbal
					kerbal = @/kerbalsOutbound
					
				}
				
				disableOnStateChange = true
				hideChildren = true
				
			}
			
			disableOnStateChange = true

		}
		
		disableOnStateChange = false

	}

//Contract Goals
//Navigate to Waypoints
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = fly to Valentina's Island
		
		vessel = @/craft
		
		PARAMETER
		{
			name = VisitWaypoint0
			type = VisitWaypoint
			
			index = 0
			distance = 2000		
			hideOnCompletion = true
			
			completeInSequence = true
			disableOnStateChange = true
			hideChildren = true
			
		}
		
		completeInSequence = true
		disableOnStateChange = true
		hideChildren = true
	
	}

	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = splashdown near Nightingale's Cay
		
		vessel = @/craft
	
		PARAMETER
		{
			name = VisitWaypoint1
			type = VisitWaypoint
			
			index = 1
			distance = 50
			hideOnCompletion = true

			completeInSequence = true
			disableOnStateChange = true
			hideChildren = true
			
		}
		
		completeInSequence = true
		disableOnStateChange = true
		hideChildren = true
		
	}

//Passenger Manifest - Unload Outbound Passengers
	PARAMETER
	{
		name = Not
		type = Not
		title = unload all outbound passengers
	
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = @kerbal.First()
	
			ITERATOR
			{
				type = Kerbal
				kerbal = @/kerbalsOutbound
				
			}
			
			disableOnStateChange = false
			hideChildren = true
			
		}
		
		completeInSequence = true
		disableOnStateChange = false

	}
	
//Passenger Manifest - Load Inbound Passengers
	PARAMETER
	{
		name = All
		type = All
		
		title = load all inbound passengers
		
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = @kerbal.First()
	
			ITERATOR
			{
				type = Kerbal
				kerbal = @/kerbalsInbound.Random(@/numPassengersInbound)
				
			}
			
			disableOnStateChange = false
			hideChildren = true
			
		}
		
		disableOnStateChange = false

	}

//Recovery Parameter - Landing
	PARAMETER
	{
		name = Any
		type = Any
		title = and then land and stop
		
		PARAMETER
		{
			name = Any
			type = Any
			title = at one of the following recovery areas

			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = the KSC Runway
				
				vessel = @/craft

			PARAMETER
				{
					name = ReachState
					type = ReachState
					
					targetBody = Kerbin
					biome = Runway
					situation = LANDED
					maxSpeed = 0.0

					disableOnStateChange = false
					hideChildren = true

				}

				disableOnStateChange = false
				hideChildren = true		

			}
			
			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = the Vehicle Assembly Building Helipad
				
				vessel = @/craft
				
				REQUIREMENT
				{
					name = CompleteContract
					type = CompleteContract

					contractType = SSI-Helicopter
					minCount = 1
					
				}

			PARAMETER
				{
					name = ReachState
					type = ReachState
					
					targetBody = Kerbin
					biome = VAB Main Building
					situation = LANDED
					maxSpeed = 0.0

					disableOnStateChange = false
					hideChildren = true

				}
				
				disableOnStateChange = false
				hideChildren = true		

			}
			
			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = the Administration Building Helipad
				
				vessel = @/craft
				
				REQUIREMENT
				{
					name = CompleteContract
					type = CompleteContract

					contractType = SSI-Helicopter
					minCount = 1
					
				}

				PARAMETER
				{
					name = ReachState
					type = ReachState

					targetBody = Kerbin
					biome = Administration	
					situation = LANDED
					maxSpeed = 0.0
					
					disableOnStateChange = false
					hideChildren = true
					
				}

				disableOnStateChange = false
				hideChildren = true

			}
			
			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = or the Spaceplane Hangar Air Terminal
				
				vessel = @/craft

			PARAMETER
				{
					name = ReachState
					type = ReachState
					
					targetBody = Kerbin
					biome = SPH
					situation = LANDED
					maxSpeed = 0.0

					disableOnStateChange = false
					hideChildren = true

				}
				
				disableOnStateChange = false
				hideChildren = true		

			}
		
			disableOnStateChange = false
		
		}
		
		completeInSequence = true
		disableOnStateChange = false

	}

//Recovery Parameter - Craft & Kerbal Safety Check
	PARAMETER
	{
		name = All
		type = All
		title = safely
		
		PARAMETER
		{
			name = VesselNotDestroyed
			type = VesselNotDestroyed
			title = without destroying your aircraft
			
			vessel = @/craft

		}
		
		PARAMETER
		{
			name = All
			type = All
			title = or killing anyone
		
			PARAMETER
			{
				name = KerbalDeaths
				type = KerbalDeaths
				title = or killing anyone outbound
				
				vessel = @/craft
				
				hideChildren = true
				hidden = true

			}
			
			PARAMETER
			{
				name = KerbalDeaths
				type = KerbalDeaths
				title = or killing anyone inbound
		
				kerbal = @/kerbalsInbound
				
				hideChildren = true
				hidden = true
				
			}
			
			disableOnStateChange = false
			hideChildren = true
		
		}
		
		completeInSequence = true
		disableOnStateChange = true
		
	}

	PARAMETER
	{
		name = All
		type = All
		title = and recover all inbound passengers
		
		PARAMETER
		{
			name = RecoverKerbal
			type = RecoverKerbal
			title = @kerbal.First()
	
			ITERATOR
			{
				type = Kerbal
				kerbal = @/kerbalsInbound
				
			}
			
			hideChildren = true
			
		}
		
	}
	
}