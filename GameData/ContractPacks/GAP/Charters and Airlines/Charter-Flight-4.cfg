//Charter-Flight-4 - KSC Airlines: Charter Flight 4 - Max Seats: 4

CONTRACT_TYPE
{


//REQUIREMENTS FOR CONTRACT TO APPEAR

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		
		contractType = KSP-IslandPrep
		minCount = 1

	}

	
//DATA NODES TO PROCESS FOR CONTRACT USE

//Contract Specific VesselParameterGroup Definition Key (to prevent conflict with other active contracts)
	DATA
	{
		type = string
		
		craft = GAPcraftCharterFlight4
		
	}

//Outbound Passenger Data
	DATA
	{
		type = int
		
		numPassengersOutbound = Random(4, 4)
		
	
	}
	
	DATA
	{
		type = List<Kerbal>
		
		kerbalsOutbound = NewKerbals(4).Random(@numPassengersOutbound)
		
		hidden = true
		
	}
	
//Inbound Passenger Data
	DATA
	{
		type = int
		
		numPassengersInbound = Random(2, 2)

	}
	
	DATA
	{
		type = List<Kerbal>
		
		kerbalsOnIsland = NewKerbals(2)
		
		hidden = true
		
	}
	
	DATA
	{
		type = List<Kerbal>
		
		kerbalsInbound = @kerbalsOnIsland.Random(@numPassengersInbound)
		
		hidden = true
		
	}

//Total Passenger Data	
//Total passengers for this contract
	DATA
	{
		type = int
		
		numPassengersTotal = @numPassengersOutbound + @numPassengersInbound
	}
	
//Maximum number of seats required for this contract
	DATA
	{
		type = int
		
		numSeats = @numPassengersOutbound > @numPassengersInbound ? @numPassengersOutbound : @numPassengersInbound
	
	}
	

//CONTRACT DESCRIPTION

	name = Charter-Flight-4
	title = Charter: Flight 4 - Max Seats: @/numSeats
	genericTitle = Charter: Flight 4 (4 Passengers)
	group = KSC Airlines Charters
	agent = KSC Airlines

	description = KSC Airlines is proud to offer air transportation service to KSC Island for KSC staff and visitors. Scientists and engineers often head out to KSC Island to work on various projects, and tourists know KSC Island as one of the best places to camp out and watch launches.\n\nPick up @/numPassengersOutbound passengers at the Spaceplane Hangar Air Terminal, and load them onto your aircraft and fly them to KSC Island. Once loaded, fly to KSC Island, land, and exchange the passengers with @/numPassengersInbound passengers waiting there for a return trip to KSC. Normally KSC provides runway passenger loading services, but for this flight it's not available. You will need to pick up the passengers at the Spaceplane Air Terminal somehow and bring them to your aircraft for loading.\n\nTotal Passengers: @numPassengersTotal\nOutbound Passengers: @/numPassengersOutbound | Inbound Passengers: @/numPassengersInbound
	
	genericDescription = KSC Airlines is proud to offer air transportation service to KSC Island for KSC staff and visitors. Scientists and engineers often head out to KSC Island to work on various projects, and tourists know KSC Island as one of the best places to camp out and watch launches.\n\nPick up passengers at the Spaceplane Hangar Air Terminal, and load them onto your aircraft and fly them to KSC Island. Once loaded, fly to KSC Island, land, and exchange the passengers with passengers waiting there for a return trip to KSC. Normally KSC provides runway passenger loading services, but for this flight it's not available. You will need to pick up the passengers at the Spaceplane Air Terminal somehow and bring them to your aircraft for loading.

	synopsis = This is a round trip flight. Part of a series of regular flights to KSC Island. All KSC Airlines charter flights are paid at a flat-rate. The pay is low, but at least it's steady. 

	notes = You may use an airplane, helicopter, or VTOL.

	completedMessage = Flight Completed! KSC Airlines thanks you for flying the friendly skies.

//Contract Limits
   	maxCompletions = 0
   	maxSimultaneous = 1
//	weight = 20.0

	autoAccept = false
	declinable = true
	cancellable = true

	minExpiry = 7.0
	maxExpiry = 7.0
	deadline = 0

//Contract Reward Modifiers
	prestige = Trivial
   	targetBody = Kerbin

//Contract Rewards
  	advanceFunds = 5000.0
  	rewardFunds = 15000.0
  	rewardReputation = 1.0
 	rewardScience = 1.0

//Contract Penalties
  	failureFunds = 10000.0
 	failureReputation = 20.0


//BEHAVIOURS TO DO WHEN CREATING CONTRACT

	BEHAVIOUR
	{
		name = SpawnKerbalsOutbound
		type = SpawnKerbal

		KERBAL
		{
			kerbal = @/kerbalsOutbound.ElementAt(0)
			owned = false
			addToRoster = false
			
			pqsCity = KSC
			pqsOffset = -393.822858971218, 337.207559687038, 25.0217218412354
			alt = 133.103743439424
			heading = 310
			
		}
		
		KERBAL
		{
			kerbal = @/kerbalsOutbound.ElementAt(1)
			owned = false
			addToRoster = false
			
			pqsCity = KSC
			pqsOffset = -393.525384567052, 336.723329816429, 24.9347487847208
			alt = 133.126783730113
			heading = 315
			
		}
		
		KERBAL
		{
			kerbal = @/kerbalsOutbound.ElementAt(2)
			owned = false
			addToRoster = false
			
			pqsCity = KSC
			pqsOffset = -392.999446681522, 335.84300309947, 24.9347402910416
			alt = 133.126783730113
			heading = 312
			
		}
		
		KERBAL
		{
			kerbal = @/kerbalsOutbound.ElementAt(3)
			owned = false
			addToRoster = false
			
			pqsCity = KSC
			pqsOffset = -392.420000189149, 334.854373717434, 24.9347470416865
			alt = 133.126783730113
			heading = 310
			
		}
		
	}

	BEHAVIOUR
	{
		name = SpawnKerbalsOnIsland
		type = SpawnKerbal

		KERBAL
		{
			kerbal = @/kerbalsOnIsland.ElementAt(0)
			owned = false
			addToRoster = false
			
			pqsCity = IslandAirfield
			pqsOffset = -130.997359523775, -175.815974214336, 18.0997077854
			alt = 133.103743439424
			heading = 310
			
		}
		
		KERBAL
		{
			kerbal = @/kerbalsOnIsland.ElementAt(1)
			owned = false
			addToRoster = false
			
			pqsCity = IslandAirfield
			pqsOffset = -132.753837420853, -175.768306999687, 18.09969760210
			alt = 133.126783730113
			heading = 310
			
		}
		
	}

	BEHAVIOUR
	{
        name = WaypointGenerator
        type = WaypointGenerator
		
		PQS_CITY
		{
			name = KSC Island Airfield
			icon = marker
			
			pqsCity = IslandAirfield
			pqsOffset = -129.870222771593, -227.36909617722, 25.4157831746222
			altitude = 100
			
		}
		
		PQS_CITY
		{
			name = Spaceplane Hangar Air Terminal
			icon = marker
			
			pqsCity = KSC
			pqsOffset = -393.822858971218, 337.207559687038, 25.0217218412354
			altitude = 5
			
		}
	
	}

	
//PARAMETERS FOR CONTRACT COMPLETION

//Craft definition
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = Your aircraft must
		
		define = @/craft
		dissassociateVesselsOnContractCompletion = true

		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = have a certified pilot
			
			trait = Pilot
			minCrew = 1
			
			disableOnStateChange = false
			hideChildren = true

		}
		
		PARAMETER
		{
			name = HasCrewCapacity
			type = HasCrewCapacity
			title = have at least @/numSeats passenger seats
			
			minCapacity = @/numSeats + 1
			
			disableOnStateChange = false
			
		}
		
	//Passenger Manifest - Load Outbound Passengers - HIDDEN
		PARAMETER
		{
			name = All
			type = All
			title = load all outbound passengers
			
			PARAMETER
			{
				name = HasCrew
				type = HasCrew
				title = @kerbal.First()
		
				ITERATOR
				{
					type = Kerbal
					kerbal = @/kerbalsOutbound
					
				}
				
			//Must be set to false to not permanently pass on loading of tour bus passengers
				disableOnStateChange = false
				hideChildren = true
				hidden = true
				
			}
			
		//Must be set to false to not permanently pass on loading of tour bus passengers
			disableOnStateChange = false
			hideChildren = true

		}

	//Need to pass this parameter else a player's tour bus become the defined craft which would not be able to complete the rest of the contract
		PARAMETER
		{
			name = ReachState
			type = ReachState
			title = and get airborne (above 500m)

			targetBody = Kerbin		
			situation = FLYING
			minAltitude = 500
			
			completeInSequence = true
			disableOnStateChange = true
			hideChildren = true

		}
		
	//Set to true to lock craft definition on completion of all criteria. All other contracts this is usually set to false in case a player loses a pilot or damages seats. But to preven tour bus from tripping on passender load, the values on passenger load must be not permanently tripped until altitude is reached, so this is required, lest passenger unload revert the passenger load above and make contract unable to complete.
		disableOnStateChange = true

	}
	
//Passenger Manifest - Load Outbound Passengers
	PARAMETER
	{
		name = All
		type = All
		
		title = load all outbound passengers
		
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = @kerbal.First()
	
			ITERATOR
			{
				type = Kerbal
				kerbal = @/kerbalsOutbound
				
			}
			
			disableOnStateChange = false
			hideChildren = true
			
		}
		
		completeInSequence = true
		disableOnStateChange = true

	}	
	
//Contract Goals
//Navigate to waypoint requirement include landing to a complete stop
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = land at the KSC Island Airfield
		
		vessel = @/craft
		
		PARAMETER
		{			            
			name = ReachState   
			type = ReachState

			situation = LANDED
			maxSpeed = 0.0
			
			completeInSequence = true
			disableOnStateChange = false
			hideChildren = true
			
		}
		
		PARAMETER
		{
			name = VisitWaypoint
			type = VisitWaypoint
			index = 0

			distance = 690
			hideOnCompletion = true
			
			completeInSequence = true
			disableOnStateChange = false
			hideChildren = true
			
		}

		completeInSequence = true
		disableOnStateChange = true
		hideChildren = true	
	
	}
	
//Passenger Manifest - Unload Outbound Passengers
	PARAMETER
	{
		name = Not
		type = Not
		title = unload all outbound passengers
	
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = @kerbal.First()
	
			ITERATOR
			{
				type = Kerbal
				kerbal = @/kerbalsOutbound
				
			}
			
			disableOnStateChange = false
			hideChildren = true
			
		}
		
		completeInSequence = true
		disableOnStateChange = false

	}
	
//Passenger Manifest - Load Inbound Passengers
	PARAMETER
	{
		name = All
		type = All
		
		title = load all inbound passengers
		
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = @kerbal.First()
	
			ITERATOR
			{
				type = Kerbal
				kerbal = @/kerbalsInbound.Random(@/numPassengersInbound)
				
			}
			
			disableOnStateChange = false
			hideChildren = true
			
		}
		
		disableOnStateChange = false

	}

//Recovery Parameter - Landing
	PARAMETER
	{
		name = Any
		type = Any
		title = and then land and stop
		
		PARAMETER
		{
			name = Any
			type = Any
			title = at one of the following recovery areas

			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = the KSC Runway
				
				vessel = @/craft

			PARAMETER
				{
					name = ReachState
					type = ReachState
					
					targetBody = Kerbin
					biome = Runway
					situation = LANDED
					maxSpeed = 0.0

					disableOnStateChange = false
					hideChildren = true

				}

				disableOnStateChange = false
				hideChildren = true		

			}
			
			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = the Vehicle Assembly Building Helipad
				
				vessel = @/craft
				
				REQUIREMENT
				{
					name = CompleteContract
					type = CompleteContract

					contractType = SSI-Helicopter
					minCount = 1
					
				}

			PARAMETER
				{
					name = ReachState
					type = ReachState
					
					targetBody = Kerbin
					biome = VAB Main Building
					situation = LANDED
					maxSpeed = 0.0

					disableOnStateChange = false
					hideChildren = true

				}
				
				disableOnStateChange = false
				hideChildren = true		

			}
			
			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = the Administration Building Helipad
				
				vessel = @/craft
				
				REQUIREMENT
				{
					name = CompleteContract
					type = CompleteContract

					contractType = SSI-Helicopter
					minCount = 1
					
				}

				PARAMETER
				{
					name = ReachState
					type = ReachState

					targetBody = Kerbin
					biome = Administration	
					situation = LANDED
					maxSpeed = 0.0
					
					disableOnStateChange = false
					hideChildren = true
					
				}

				disableOnStateChange = false
				hideChildren = true

			}
			
			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = or the Spaceplane Hangar Air Terminal
				
				vessel = @/craft

			PARAMETER
				{
					name = ReachState
					type = ReachState
					
					targetBody = Kerbin
					biome = SPH
					situation = LANDED
					maxSpeed = 0.0

					disableOnStateChange = false
					hideChildren = true

				}
				
				disableOnStateChange = false
				hideChildren = true		

			}
		
			disableOnStateChange = false
		
		}
		
		completeInSequence = true
		disableOnStateChange = false

	}
	
//Recovery Parameter - Craft & Kerbal Safety Check
	PARAMETER
	{
		name = All
		type = All
		title = safely
		
		PARAMETER
		{
			name = VesselNotDestroyed
			type = VesselNotDestroyed
			title = without destroying your aircraft
			
			vessel = @/craft

		}
		
		PARAMETER
		{
			name = All
			type = All
			title = or killing anyone
		
			PARAMETER
			{
				name = KerbalDeaths
				type = KerbalDeaths
				title = or killing anyone outbound
				
				vessel = @/craft
				
				hideChildren = true
				hidden = true

			}
			
			PARAMETER
			{
				name = KerbalDeaths
				type = KerbalDeaths
				title = or killing anyone inbound
		
				kerbal = @/kerbalsInbound
				
				hideChildren = true
				hidden = true
				
			}
			
			disableOnStateChange = false
			hideChildren = true
		
		}
		
//
// Bug #198 (KSP 1.1.3 has EVA kerbals experiencing 15+ Gs on exit)
//		
//		PARAMETER
//		{
//			name = VesselParameterGroup
//			type = VesselParameterGroup
//			title = or exceeding 9 Gs at any time during the flight
//			
//			vessel = @/craft
//			
//			PARAMETER
//			{
//				name = ReachState
//				type = ReachState
//				
//				maxAcceleration = 9.0
//				failWhenUnmet = true
//				
//				disableOnStateChange = false
//				hideChildren = true
//				hidden = true
//			
//			}
//			
//			disableOnStateChange = false
//			hideChildren = true
//		
//		}
		
		completeInSequence = true
		disableOnStateChange = true
		
	}

//Recovery Parameter - Recover Kerbals
	PARAMETER
	{
		name = All
		type = All
		title = and recover all inbound passengers
		
		PARAMETER
		{
			name = RecoverKerbal
			type = RecoverKerbal
			title = @kerbal.First()
	
			ITERATOR
			{
				type = Kerbal
				kerbal = @/kerbalsInbound
				
			}
			
			hideChildren = true
			
		}
		
	}
	
}